#!/usr/bin/env python3
import argparse
import os
import re
from pathlib import Path
from subprocess import run

parser = argparse.ArgumentParser(add_help=False)
parser.add_argument("--branch", "-b", help="Odoo branch", required=True)
parser.add_argument("--http-port", "-p", help="HTTP Port", default="8069")
parser.add_argument("--gevent-port", help="Gevent Port")

args, extra_args = parser.parse_known_args()
extra_args.extend(["--branch", args.branch])

if not args.gevent_port:
    args.gevent_port = str(int(args.http_port) + 3)

extra_args.extend(["--http-port", args.http_port, "--gevent-port", args.gevent_port])

odoo_version = ".".join(re.findall(r"\d+", args.branch)[0:2])
odoo_version = float(odoo_version) if odoo_version else "master"
docker_file = next(
    path.split(".")[0]
    for path in sorted(
        (path.name for path in Path(__file__).resolve().parent.glob("*.dockerfile")),
        key=lambda k: float(k.split("-to-")[0].replace("-", ".")),
        reverse=True,
    )
    if odoo_version == "master" or odoo_version >= float(path.split("-to-")[0].replace("-", "."))
)

command = [
    "docker-compose",
    "run",
    "--rm",
    "-p",
    "5678:5678",
]
if not extra_args or extra_args[0] != "shell":
    command += [
        "-p",
        f"{args.http_port}:{args.http_port}",
        "-p",
        f"{args.gevent_port}:{args.gevent_port}",
    ]
command += [
    "odoo",
    "odoo",
]

run(
    command + extra_args,
    env=dict(os.environ, USER_ID=str(os.getuid()), DOCKERFILE=docker_file),
    cwd=os.path.dirname(os.path.realpath(__file__)),
)
